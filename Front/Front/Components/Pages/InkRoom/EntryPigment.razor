@page "/InkRoom/EntryPigment"
@inject ServiciosInkRoom Ser_
@using System.Linq
@using System.Globalization
@using Datos
@using Front.Servicios

<style>
    .Contenedor-Principal {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100% padding: 20px;
    }

    .Contenedor-Secundario {
        backdrop-filter: blur(12px);
        background: rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        padding: 30px;
        width: 100%;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
        border: 1px solid rgba(255, 255, 255, 0.18);
    }

    .tabla-oscura {
        /*  background-color: rgba(255,255,255,0.05); */
        border-radius: 12px;
        overflow: hidden;
        color: lightgray;
        font-size: small;
    }

    .input-moderno {
        padding: 8px 12px;
        border-radius: 8px;
        border: none;
        background: rgba(255,255,255,0.1);
        color: white;
        margin-right: 10px;
    }

    .filter-bar {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }


    .tabla-scroll {
        max-height: 400px; /* Ajusta según tu layout */
        overflow-y: auto;
        border-radius: 12px;
        backdrop-filter: blur(6px);
        background: rgba(255, 255, 255, 0.05);
        box-shadow: inset 0 0 0.5px rgba(255, 255, 255, 0.2);
        padding: 8px;
    }

        /* Opcional: scroll elegante */
        .tabla-scroll::-webkit-scrollbar {
            width: 8px;
        }

        .tabla-scroll::-webkit-scrollbar-thumb {
            background-color: rgba(255, 255, 255, 0.3);
            border-radius: 4px;
        }


    /* Boton Rojo Alerta */

    .boton-circular {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        padding: 0;
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #dc3545;
        color: white;
        border: 3px solid #dc3545;
        box-shadow: 0 0 10px #dc3545;
        animation: parpadeo 2s ease-in-out infinite, resplandor 1.5s ease-in-out infinite;
    }

    @@keyframes parpadeo {
        0%, 100% {
            opacity: 1;
        }

        50% {
            opacity: 0;
        }
    }

    @@keyframes resplandor {
        0%, 100% {
            box-shadow: 0 0 10px #dc3545, 0 0 20px #dc3545;
        }

        50% {
            box-shadow: 0 0 5px #dc3545, 0 0 10px #dc3545;
        }
    }

    .spinner-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .glass-loader {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.08);
        border-radius: 12px;
        padding: 20px 30px;
        box-shadow: 0 6px 24px rgba(0, 0, 0, 0.2);
        text-align: center;
        color: #fff;
    }

    .loader {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid #00bcd4;
        border-radius: 50%;
        width: 36px;
        height: 36px;
        animation: spin 1s linear infinite;
        margin-bottom: 10px;
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }

    .cantidad-label {
        font-weight: 600;
        font-size: 1.2rem;
        color: #e63946;
        background: rgba(255, 255, 255, 0.1);
        padding: 6px 12px;
        border-radius: 8px;
        backdrop-filter: blur(6px);
    }




    .login-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 40vh;
        padding: 20px;
    }

    .login-card {
        backdrop-filter: blur(12px);
        background: rgba(255, 255, 255, 0.05);
        border-radius: 16px;
        padding: 30px;
        width: 550px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
        border: 1px solid rgba(255, 255, 255, 0.18);
    }

</style>

<div class="login-wrapper">
    <div class="login-card">
        <div class="text-center">
            <h3 style="color:white">EntryPigment</h3>
        </div>
        <br /> <br />
        <div class="row">
            <label style="color:white">Select Pigmento</label>
            <div class="col-md-12">
                <select class="form-select" style="width:100%;color:black"                      
                        @onchange="@(async e => await OnPigmentoChanged(e))">
                    <option disabled selected value="">-- Select Pigment --</option>
                    @foreach (var pigmento in pigmentos)
                    {
                      <option value="@pigmento.TypeCLS">@pigmento.TypeCLS</option>
                    }
                </select>
            </div>
        </div>
        <br />

        <div class="row">
            <label style="color:white">Select Color</label>
            <div class="col-md-12">
                <select class="form-select glass-select mb-2" @bind="selectedColorID">
                    <option disabled selected value="">-- Select Color --</option>
                    @foreach (var Color in selectedPigmentoNombre)
                    {
                        <option value="@Color.descriptionCLS">@Color.descriptionCLS</option>
                    }
                </select>
            </div>
        </div>

        <br />
        <div class="row">
            <div class="col-md-6">
                <label style="color:white">Quantity</label>
                <input type="number" class="form-control" />
            </div>
            <div class="col-md-6">
                <label style="color:white">Select Pigmento</label>
                <input type="text" class="form-control" />
            </div>
        </div>
    </div>
</div>


@if (showLoading)
{
    <div class="spinner-wrapper">
        <div class="glass-loader">
            <div class="loader"></div>
            <span>Cargando vista...</span>
        </div>
    </div>
    @* <LoadingSpinner /> *@
}
else if (!isLoaded)
{
    <!-- Nada aún, pero sin mostrar spinner -->
}
else
{
    <DashboardContent />
}


@code {
    

    private int selectedPigmentoId;
    private bool showLoading = false;
    private bool isLoaded = false;
    private string selectedPigmentoID = string.Empty;
    private int selectedColorID;
    private List<InkSelectColor> selectedPigmentoNombre = new();
    private List<InkRoomCLS> pigmentos = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var delayTask = Task.Delay(1000); // espera 2 segundos
            var completedTask = await Task.WhenAny(Ser_.ListarPigmento(), delayTask);

            if (completedTask == delayTask)
            {
                showLoading = true;
            }
            else
            {
                pigmentos = await Ser_.ListarPigmento(); // espera que termine la carga real
                isLoaded = true;
                showLoading = false;
            }
        }
        catch (Exception ex)
        {
            //isLoading = false;
        }
    }

    private async Task OnPigmentoChanged(ChangeEventArgs e)
    {
        var tipo = e.Value?.ToString();
        if (!string.IsNullOrWhiteSpace(tipo))
        {
            try
            {
                selectedPigmentoNombre = await Ser_.ListarColor(tipo);
            }
            catch (Exception ex)
            {

            }
        }

    }
}
