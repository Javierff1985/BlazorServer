@page "/Reports/ReportPigment"

@using Datos
@using Servicios
@inject ServiciosInkRoom Ser_
@using System.Linq
@using System.Globalization
@inject IJSRuntime JsRuntime

<h3>ReportPigment</h3>

<style>
    .Contenedor-Principal {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100% padding: 20px;
    }

    .Contenedor-Secundario {
        backdrop-filter: blur(12px);
        background: rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        padding: 30px;
        width: 100%;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
        border: 1px solid rgba(255, 255, 255, 0.18);
    }

    .tabla-oscura {
        /*  background-color: rgba(255,255,255,0.05); */
        border-radius: 12px;
        overflow: hidden;
        color: lightgray;
        font-size: small;
    }

    .input-moderno {
        padding: 8px 12px;
        border-radius: 8px;
        border: none;
        background: rgba(255,255,255,0.1);
        color: white;
        margin-right: 10px;
    }

    .filter-bar {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }


    .tabla-scroll {
        max-height: 400px; /* Ajusta según tu layout */
        overflow-y: auto;
        border-radius: 12px;
        backdrop-filter: blur(6px);
        background: rgba(255, 255, 255, 0.05);
        box-shadow: inset 0 0 0.5px rgba(255, 255, 255, 0.2);
        padding: 8px;
    }

        /* Opcional: scroll elegante */
        .tabla-scroll::-webkit-scrollbar {
            width: 8px;
        }

        .tabla-scroll::-webkit-scrollbar-thumb {
            background-color: rgba(255, 255, 255, 0.3);
            border-radius: 4px;
        }


    /* Boton Rojo Alerta */

    .boton-circular {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        padding: 0;
        font-size: 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #dc3545;
        color: white;
        border: 3px solid #dc3545;
        box-shadow: 0 0 10px #dc3545;
        animation: parpadeo 2s ease-in-out infinite, resplandor 1.5s ease-in-out infinite;
    }

    @@keyframes parpadeo {
        0%, 100% {
            opacity: 1;
        }

        50% {
            opacity: 0;
        }
    }

    @@keyframes resplandor {
        0%, 100% {
            box-shadow: 0 0 10px #dc3545, 0 0 20px #dc3545;
        }

        50% {
            box-shadow: 0 0 5px #dc3545, 0 0 10px #dc3545;
        }
    }
.spinner-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.glass-loader {
    backdrop-filter: blur(10px);
    background: rgba(255, 255, 255, 0.08);
    border-radius: 12px;
    padding: 20px 30px;
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.2);
    text-align: center;
    color: #fff;
}

.loader {
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-top: 4px solid #00bcd4;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    animation: spin 1s linear infinite;
    margin-bottom: 10px;
}

@@keyframes spin {
    to { transform: rotate(360deg); }
}

.cantidad-label {
    font-weight: 600;
    font-size: 1.2rem;
    color: #e63946;
    background: rgba(255, 255, 255, 0.1);
    padding: 6px 12px;
    border-radius: 8px;
    backdrop-filter: blur(6px);
}
.status-row.active {
    background-color: rgba(255, 0, 0, 0.1); /* Rojo suave */
    box-shadow: inset 0 0 0 1px crimson;
    transition: all 0.3s ease;
}

.status-row.inactive {
    background-color: rgba(255, 255, 255, 0.05); /* Fondo neutro */
    transition: all 0.3s ease;
}

.status-row.verde {
    background-color: rgba(0, 255, 0, 0.1);
}

.status-row.naranja {
    background-color: rgba(255, 165, 0, 0.1);
}

.status-row.rojo {
    background-color: rgba(255, 0, 0, 0.1);
}


</style>




<div class="text-center">
    <h3 style="color:white">ReportPigment</h3>
</div>

<div class="Contenedor-Principal">
    <div class="Contenedor-Secundario">
        <br />
        <div class="row h-100">
            <!-- Columna izquierda -->
            <div class="col-md-6 d-flex align-items-center justify-content-center">
              <label class="text-white me-2">Filtrar por:</label>
            <select @bind="selectedColumn" class="input-moderno me-2">
                <option value="Type">Type</option>
                <option value="Description">Description</option>
                <option value="Code">Code</option>
                <option value="Stock">Stock</option>
                <option value="InUse">In Use</option>
                <option value="Percentage">Percentage %</option>
            </select>
                 <input type="text" @bind="filterText" class="input-moderno" placeholder="🔍 Buscar..." />
            </div>
            
           

            <!-- Columna derecha -->
            <div class="col-md-6 d-flex align-items-center justify-content-center text-white">
              <h2 class="text-center">⚙️ Grafica</h2>


               <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script type="text/javascript">
    google.charts.load("current", {packages:['corechart']});
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
      var data = google.visualization.arrayToDataTable([
        ["Element", "Density", { role: "style" } ],
        ["Copper", 8.94, "#b87333"],
        ["Silver", 10.49, "silver"],
        ["Gold", 19.30, "gold"],
        ["Platinum", 21.45, "color: #e5e4e2"]
      ]);

      var view = new google.visualization.DataView(data);
      view.setColumns([0, 1,
                       { calc: "stringify",
                         sourceColumn: 1,
                         type: "string",
                         role: "annotation" },
                       2]);

      var options = {
        title: "Density of Precious Metals, in g/cm^3",
        width: 600,
        height: 400,
        bar: {groupWidth: "95%"},
        legend: { position: "none" },
      };
      var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
      chart.draw(view, options);
  }
  </script>
<div id="columnchart_values" style="width: 900px; height: 300px;"></div>




             
            </div>
        </div>

        <br />
        <div class="tabla-scroll">
            <table class="tabla-oscura w-100">
                <thead class="table-light text-white">
                    <tr style="border:solid;border-block-width:1px;background-color:black" class="text-center">
                        <th>Status</th>
                        <th>Type</th>
                        <th>Description</th>
                        <th>Code</th>
                        <th>Stock</th>
                        <th>In Use</th>
                        <th>Percentage %</th>
                        
                    </tr>
                </thead>
                <tbody style="border:solid;border-block-width:1px;border-color:silver">
                    @foreach (var item in FilteredList)
                    {
                        <tr style="border:solid;border-block-width:1px;border-color:dimgray" class="status-row">
                              <td style="background-color:rgba(255,255,255,0.2);width:30px" class="text-center">
                                @{
                                    
                                    string alerta = "";
                                    if (item.TOTAL_STOCK_QUANTITY >= 2 && item.TOTAL_USE_QUANTITY > 0)
                                    {
                                        alerta = "Verde";
                                        <i class="bi bi-check-circle-fill" style="font-size: 1.0rem;color:lime"></i>
                                    }
                                     //Regla "Warning" 🔶
                                    else if (item.TOTAL_STOCK_QUANTITY == 1 && item.TOTAL_USE_QUANTITY == 1)
                                    {
                                        alerta = "Naranja";
                                        <i class="bi bi-exclamation-triangle-fill" style="font-size: 1.0rem;color:darkorange"></i>
                                    }
                                    // Regla "Alert" 🟥
                                    else if (item.TOTAL_STOCK_QUANTITY < 0 && item.TOTAL_USE_QUANTITY <= 1)
                                    {
                                        alerta = "Error rojo";
                                        bool esAlertaRoja = item.TOTAL_STOCK_QUANTITY < 0 && item.TOTAL_USE_QUANTITY <= 1;
                                        @if (esAlertaRoja)
                                        {
                                            alerta = "Rojo";
                                            <button type="button" class="btn btn-danger boton-circular text-center" style="width:20px;height:20px" title="Alerta Crítica">x</button>
                                        }
                                        else
                                        {
                                            <span style="font-weight:bold;">OKK</span> <!-- o 🔄 según tu lógica -->
                                        }
                                    }
                                    else
                                    {
                                        // alerta = "Error no sale ni mierda";
                                        <button type="button" class="btn btn-danger boton-circular" style="width:20px;height:20px" title="Alerta Crítica"></button>
                                    }   
                                      
                                     
                                 }
                                  
                                     
                                
                            </td>
                            <td>@item.Type</td>
                            <td>@item.Description</td>
                            <td>@item.Code</td>
                            <td>@item.TOTAL_STOCK_QUANTITY</td>
                            <td>@item.TOTAL_USE_QUANTITY</td>
                            <td>@item.PERCENTAGE_USED</td>                          
                        </tr>                   
                    }

                </tbody>
            </table>
        </div>
        @*  <button type="button" class="btn btn-danger boton-circular" style="width:20px;height:20px" title="Alerta Crítica"></button> *@       
    </div>
</div>


<label class="cantidad-label">@cantidad</label>

@if (showLoading)
{<div class="spinner-wrapper">
    <div class="glass-loader">
        <div class="loader"></div>
        <span>Cargando vista...</span>
    </div>
</div>
    @* <LoadingSpinner /> *@
}
else if (!isLoaded)
{
    <!-- Nada aún, pero sin mostrar spinner -->
}
else
{
    <DashboardContent />
}

  
@code{

  




    private int cantidad;
    private bool showLoading = false;
    private bool isLoaded = false;  
    private string selectedColumn = "Type";
    private string filterText = "";
    private List<InkRoomReportACLS> ListaGeneralFront = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var delayTask = Task.Delay(1000); // espera 2 segundos
            var completedTask = await Task.WhenAny(Ser_.ListaGeneralAsync(), delayTask);

            if (completedTask == delayTask)
            {
                showLoading = true;
            }
            else
            {
                 ListaGeneralFront = await Ser_.ListaGeneralAsync(); // espera que termine la carga real
                 cantidad = ListaGeneralFront.Count(item => item.TOTAL_STOCK_QUANTITY >= 2 && item.TOTAL_USE_QUANTITY > 0);
                 isLoaded = true;
                 showLoading = false;            
                           

            }
          
        }
        catch(Exception ex)
        {
            //isLoading = false;
        }

    }

    private IEnumerable<InkRoomReportACLS> FilteredList =>
        string.IsNullOrWhiteSpace(filterText)
            ? ListaGeneralFront
            : ListaGeneralFront.Where(item =>
            {
                var text = filterText.Trim();
                return selectedColumn switch
                {
                    "Type" => !string.IsNullOrEmpty(item.Type) &&
                              item.Type.Contains(text, StringComparison.OrdinalIgnoreCase),
                    "Description" => !string.IsNullOrEmpty(item.Description) &&
                                     item.Description.Contains(text, StringComparison.OrdinalIgnoreCase),
                    "Code" => !string.IsNullOrEmpty(item.Code) &&
                              item.Code.Contains(text, StringComparison.OrdinalIgnoreCase),
                    "Stock" => item.TOTAL_STOCK_QUANTITY.ToString().Contains(text),
                    "InUse" => item.TOTAL_USE_QUANTITY.ToString().Contains(text),

                    //"Percentage" => item.PERCENTAGE_USED.ToString("F2", CultureInfo.InvariantCulture).Contains(text),


                    _ => false // No filtrar si la columna no es válida
                };
            });

    
    
   



}